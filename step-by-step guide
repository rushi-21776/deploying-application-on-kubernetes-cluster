Below given are the following steps to deploy your application. In this case I will be using minikube.
Step 1:- Setup machine and install minikube and pulling code from git
Step 2:- Setup and Manage Docker Container for NodeJS Application into Kubernetes Pods
Step 3:- Managed deployment, Replication, auto-healing, and auto-scaling for kubernetes cluster.
Step 4:- Managed Network and Services with Host

Step 1:- 
Installing minikube. Follow the given link https://minikube.sigs.k8s.io/docs/start/
#sudo apt update
#sudo apt install docker.io
#sudo usermod -a -G docker $USER && newgrp docker
#sudo snap install kubectl --classic
#minikube start --driver=docker
#git clone https://github.com/rushi-21776/deploying-application-on-kubernetes-cluster.git

Step 2:- 
docker build -t rushikesh21776/todoapp:latest .
docker run -d -p 8000:8000 rushikesh21776/todoapp:latest
Push the docker image
#docker push rushikesh21776/todoapp:latest
Now create pod.yml file. The file is present in the repo.
#vi pod.yml
#kubectl apply -f pod.yml
#kubectl get pods

Step 3:- 
#Write a deployment.yml file. The file is present in the repo.
#vi deployment.yml
#kubectl apply -f deployment.yml
#kubectl get deployments
#kubectl get pods
Check if there are 3 pods present as we have set the replication to 3.

Step 4:- 
Now create a service.yml file. The file is present in the repo.
#vi service.yml
#kubectl apply -f service.yml
#kubectl get svc
#minikube service <service-name> --url
This will give you the access URL for the application. Check the application with your URl
#curl -L http://0.0.0.0:30007
Add the IP into the /etc/hosts file
#vi /etc/hosts
0.0.0.0 todoapp.com

Check the application with the domain name
#curl -L http://todoapp.com:30007
